# Application Name
spring.application.name=nutritheous-server

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:nutritheous}
spring.datasource.username=${DB_USERNAME:nutritheous}
spring.datasource.password=${DB_PASSWORD:nutritheous}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Servlet Multipart Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Google Cloud Storage Configuration
gcs.project-id=${GCS_PROJECT_ID:neat-beaker-475617-a9}
gcs.credentials-json=${GCS_CREDENTIALS_JSON:}
gcs.credentials-path=${GCS_CREDENTIALS_PATH:}
gcs.bucket-name=${GCS_BUCKET_NAME:nutritheous}
gcs.url-expiry=${GCS_URL_EXPIRY:86400}
gcs.image-url-expiry=${GCS_IMAGE_URL_EXPIRY:86400}
gcs.max-image-size-kb=${GCS_MAX_IMAGE_SIZE_KB:300}

# JWT Configuration
jwt.secret=${JWT_SECRET:nutritheous-super-secret-key-minimum-256-bits-required-for-hs256}
jwt.expiration=${JWT_EXPIRATION:86400000}

# OpenAI Configuration (replaces external Go analyzer service)
openai.api.key=${OPENAI_API_KEY:}
openai.api.model=${OPENAI_MODEL:gpt-4o-mini}
openai.api.max-tokens=${OPENAI_MAX_TOKENS:800}
openai.api.timeout=${OPENAI_TIMEOUT:30}

# Server Configuration
server.port=${SERVER_PORT:8081}
server.error.include-message=always
server.error.include-binding-errors=always

# Logging Configuration
logging.level.com.nutritheous=${LOG_LEVEL:DEBUG}
logging.level.com.nutritheous.config.JwtAuthenticationFilter=DEBUG
logging.level.org.springframework.security=DEBUG

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
